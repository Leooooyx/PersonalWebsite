@use "../abstracts/mixins" as mixins;
@use "../abstracts/variables";
// -----------------------------------------------------------------------------
// This file contains all styles related to the button component.
// -----------------------------------------------------------------------------
.menu-button {
    @include mixins.on-hover-focus() {
        background-color: variables.$color-white-alpha90;
    }
    @include mixins.on-active() {
        background-color: variables.$color-dark-grey;
        svg {
            path {
                fill: variables.$color-white;
            }
        }
    }
    display: flex;
    justify-content: center;
    align-items: center;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    margin: 0px 5px;
    cursor: pointer;

    // Transitions & Animations
    transition: all 100ms ease;
    animation-duration: 1s;
    animation-name: fadeAndScale;
}

.expand-button {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    cursor: pointer;
    &.collapsed path:nth-child(2) {
        //transition: 1s ease-in-out all;
        transform: rotate(90deg) scale(0);
    }
}

.button {
    @include mixins.on-hover-focus() {
        background-position: -100% 0;
        // &:before {
        //     transform: translate3d(0, 0, 0);
        // }
        //background-color: variables.$color-button-black;
    }
    @include mixins.on-active() {
        background-color: variables.$color-button-black;
    }
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 10.5px;
    width: 267px;
    cursor: pointer;
    background-size: 200% 100%;
    background-image: linear-gradient(
        to right,
        variables.$color-button-grey 50%,
        variables.$color-button-black 50%
    );
    -webkit-transition: background-position 1s;
    -moz-transition: background-position 1s;
    transition: background-position 1s;
    margin-bottom: 10px;
    &.configure-button {
        background-image: linear-gradient(
            to right,
            variables.$color-white 50%,
            variables.$color-button-grey 50%
        );
        @include mixins.on-hover-focus() {
            p {
                color: variables.$color-white;
            }
        }
        @include mixins.on-active() {
            p {
                color: variables.$color-white;
            }
        }
    }
}

.close-button {
    position: absolute;
    right: 0;
    height: 38px;
    width: 38px;
    cursor: pointer;
    z-index: map-get(variables.$zindex, 'button');
}

.text-button {
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    margin-right: 10px;

    p {
        text-decoration: none;
        --ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);
        position: relative;
        &::before,
        &::after {
            position: absolute;
            content: '';
            left: 0;
            bottom: -0.1rem;
            display: block;
            width: 100%;
            height: 1px;
            background: variables.$color-black;
            transition: 1.1s var(--ease-out-expo);
        }

        &::before {
            transform: scaleX(0);
            transform-origin: left;
        }

        &::after {
            transform-origin: right;
            transition-delay: 0.25s;
        }
        @include mixins.on-hover-focus() {
            &::before {
                transform: scaleX(1);
                transition-delay: 0.25s;
            }

            &::after {
                transform: scaleX(0);
                transition-delay: 0s;
            }
        }
    }
}
